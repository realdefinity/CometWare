-- Load Rayfield Library
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Create the Rayfield UI Window
local Window = Rayfield:CreateWindow({
    Name = "comet: arsenal edition",
    LoadingTitle = "Initializing comet...",
    LoadingSubtitle = "By Definity",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "Comet",
        FileName = "Comet"
    }
})

-- Create a Main Tab in the UI
local MainTab = Window:CreateTab("Arsenal", 4483362458)

-- üìÇ Folder Setup
local folderPath = "Comet"
if not isfolder(folderPath) then
    makefolder(folderPath) -- Create the Comet folder if it doesn't exist
end

-- üåê Module URLs
local modules = {
    AutoShoot = "https://raw.githubusercontent.com/realdefinity/comet/refs/heads/arsenal/AutoShoot.lua",
    ESP = "https://raw.githubusercontent.com/realdefinity/comet/refs/heads/arsenal/esp.lua",
    SilentAim = "https://raw.githubusercontent.com/realdefinity/comet/refs/heads/arsenal/SilentAim.lua"
}

-- üõ†Ô∏è Custom Functions (UNC and SUNC)
local function UNC(func, ...)
    task.spawn(func, ...)
end

local function SUNC(func, ...)
    local bindable = Instance.new("BindableEvent")
    local result
    UNC(function(...)
        result = {func(...)}
        bindable:Fire()
    end, ...)
    bindable.Event:Wait()
    return unpack(result)
end

-- üõ†Ô∏è Function to Download and Load Modules
local function downloadModule(name, url)
    local filePath = folderPath .. "/" .. name .. ".lua"
    if not isfile(filePath) then
        writefile(filePath, game:HttpGet(url)) -- Download the module if it doesn't exist
        print("[Comet] Downloaded module:", name)
    else
        print("[Comet] Module already exists:", name)
    end
    return loadfile(filePath)() -- Load and execute the module
end

-- üì• Download and Load Modules
local AutoShoot = SUNC(downloadModule, "AutoShoot", modules.AutoShoot)
local ESP = SUNC(downloadModule, "ESP", modules.ESP)
local SilentAim = SUNC(downloadModule, "SilentAim", modules.SilentAim)

-- üõ†Ô∏è Improved Integration and Execution
UNC(function()
    -- ESP Integration
    ESP:SetupUI(MainTab)
    ESP:Run()

    -- Silent Aim Integration
    SilentAim:SetupUI(MainTab)
    SilentAim:Run()

    -- Auto Shoot Integration (Passing Silent Aim's getClosestTarget)
    AutoShoot:SetupUI(MainTab)
    AutoShoot:Run(SilentAim.getClosestTarget)

    -- Notify user that all modules are loaded
    Rayfield:Notify({
        Title = "Comet Modules Loaded",
        Content = "ESP, Silent Aim, and Auto Shoot are fully operational!",
        Duration = 5,
        Actions = {
            Ignore = {
                Name = "Okay",
                Callback = function()
                    print("All modules loaded successfully!")
                end
            }
        }
    })
end)
