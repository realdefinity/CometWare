-- Ensure Only One Instance of the UI
if game.CoreGui:FindFirstChild("CometUI") then
    game.CoreGui.CometUI:Destroy()
end

-- Create the ScreenGui (UI Container)
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CometUI"
screenGui.Parent = game.CoreGui
screenGui.IgnoreGuiInset = true -- Ignore the top bar offset

-- Create the Main Frame (UI Window)
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui
mainFrame.Size = UDim2.new(0, 400, 0, 300)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0

-- Add Rounded Corners to the Main Frame
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 10)
uiCorner.Parent = mainFrame

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Parent = mainFrame
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
titleBar.BorderSizePixel = 0

-- Title Text
local titleText = Instance.new("TextLabel")
titleText.Name = "TitleText"
titleText.Parent = titleBar
titleText.Size = UDim2.new(1, 0, 1, 0)
titleText.Position = UDim2.new(0, 0, 0, 0)
titleText.BackgroundTransparency = 1
titleText.Text = "Comet UI"
titleText.TextColor3 = Color3.fromRGB(255, 255, 255)
titleText.Font = Enum.Font.GothamBold
titleText.TextSize = 16
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.TextStrokeTransparency = 0.9
titleText.Position = UDim2.new(0.02, 0, 0, 0)

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Parent = titleBar
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -30, 0, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 14

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 5)
closeCorner.Parent = closeButton

closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy() -- Destroy the UI when the close button is clicked
end)

-- Placeholder for Content
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Parent = mainFrame
contentFrame.Size = UDim2.new(1, 0, 1, -30)
contentFrame.Position = UDim2.new(0, 0, 0, 30)
contentFrame.BackgroundTransparency = 1

-- Dragging Logic for the Main Frame
local dragging = false
local dragInput, dragStart, startPos

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- SLIDERS ------------------------------------------------------------------------------------------------------------------------------------
local function createEnhancedSlider(parent, position, size, min, max, defaultValue, callback)
    -- Slider Container
    local sliderFrame = Instance.new("Frame", parent)
    sliderFrame.Size = size or UDim2.new(0, 300, 0, 60)
    sliderFrame.Position = position or UDim2.new(0.5, -150, 0.1, 0)
    sliderFrame.AnchorPoint = Vector2.new(0.5, 0)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    sliderFrame.ClipsDescendants = true

    local sliderCorner = Instance.new("UICorner", sliderFrame)
    sliderCorner.CornerRadius = UDim.new(0, 10)
    sliderCorner.Parent = sliderFrame

    -- Value Label
    local valueLabel = Instance.new("TextLabel", sliderFrame)
    valueLabel.Size = UDim2.new(1, 0, 0.4, 0)
    valueLabel.Position = UDim2.new(0, 0, 0, 0)
    valueLabel.BackgroundTransparency = 1
    valueLabel.Text = "Value: " .. tostring(defaultValue)
    valueLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
    valueLabel.TextScaled = true
    valueLabel.Font = Enum.Font.GothamBold
    valueLabel.TextStrokeTransparency = 0.9

    -- Slider Bar
    local sliderBar = Instance.new("Frame", sliderFrame)
    sliderBar.Size = UDim2.new(0.9, 0, 0.3, 0)
    sliderBar.Position = UDim2.new(0.05, 0, 0.6, 0)
    sliderBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)

    local barCorner = Instance.new("UICorner", sliderBar)
    barCorner.CornerRadius = UDim.new(0, 10)
    barCorner.Parent = sliderBar

    -- Slider Handle
    local sliderHandle = Instance.new("Frame", sliderBar)
    sliderHandle.Size = UDim2.new((defaultValue - min) / (max - min), 0, 1.2, 0)
    sliderHandle.BackgroundColor3 = Color3.fromRGB(70, 150, 250)

    local handleCorner = Instance.new("UICorner", sliderHandle)
    handleCorner.CornerRadius = UDim.new(0, 10)
    handleCorner.Parent = sliderHandle

    -- Expand the Clickable Area (Invisible Hitbox)
    local sliderHitbox = Instance.new("Frame", sliderBar)
    sliderHitbox.Size = UDim2.new(1, 0, 1.5, 0) -- Larger than the handle
    sliderHitbox.BackgroundTransparency = 1

    -- Glow Effect for Handle
    local glow = Instance.new("UIGradient", sliderHandle)
    glow.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 140, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(140, 220, 255))
    }

    -- Drop Shadow for Handle
    local shadow = Instance.new("ImageLabel", sliderHandle)
    shadow.Size = UDim2.new(1.2, 0, 1.5, 0)
    shadow.Position = UDim2.new(-0.1, 0, -0.25, 0)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.6

    -- Dragging Logic
    local userInputService = game:GetService("UserInputService")
    local dragging = false

    sliderHitbox.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            -- Animate handle enlargement
            sliderHandle:TweenSize(
                UDim2.new(sliderHandle.Size.X.Scale, 0, 1.3, 0), -- Enlarges slightly
                Enum.EasingDirection.Out,
                Enum.EasingStyle.Back,
                0.2,
                true
            )

            -- Pulsating Glow
            glow.Offset = Vector2.new(0, 0)
            task.spawn(function()
                while dragging do
                    glow.Offset = glow.Offset + Vector2.new(0.02, 0)
                    task.wait(0.03)
                end
            end)
        end
    end)

    userInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
            -- Restore handle size
            sliderHandle:TweenSize(
                UDim2.new(sliderHandle.Size.X.Scale, 0, 1, 0), -- Restore to normal size
                Enum.EasingDirection.Out,
                Enum.EasingStyle.Back,
                0.2,
                true
            )
        end
    end)

    userInputService.InputChanged:Connect(function(mouseInput)
        if dragging and mouseInput.UserInputType == Enum.UserInputType.MouseMovement then
            local x = math.clamp(mouseInput.Position.X - sliderBar.AbsolutePosition.X, 0, sliderBar.AbsoluteSize.X)
            local percent = x / sliderBar.AbsoluteSize.X
            local value = math.floor(min + percent * (max - min))

            -- Animate handle position
            sliderHandle:TweenSize(
                UDim2.new(percent, 0, 1.3, 0), -- Handle moves and animates
                Enum.EasingDirection.Out,
                Enum.EasingStyle.Quad,
                0.05,
                true
            )

            -- Update label
            valueLabel.Text = "Value: " .. tostring(value)
            if callback then
                callback(value) -- Trigger callback
            end
        end
    end)
end

-- Add the Enhanced Slider to the UI
createEnhancedSlider(
    contentFrame, -- Parent (from the base UI)
    UDim2.new(0.5, 0, 0.1, 0), -- Position
    UDim2.new(0, 300, 0, 60), -- Size
    0, -- Min value
    100, -- Max value
    50, -- Default value
    function(value) -- Callback
        print("Slider value changed to:", value)
    end
)

-- END OF SLIDERS ------------------------------------------------------------------------------------------------------------------------------

